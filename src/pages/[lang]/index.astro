---
export async function getStaticPaths() {
  return [{ params: { lang: 'en' } }, { params: { lang: 'fa' } }]
}

import DefaultLayout from '@layouts/DefaultLayout.astro'
import Hero from '@components/Hero.astro'
import Feature from '@components/Feature.astro'
import Counter from '@components/Counter.astro'
import { AvatarGroup } from 'accessible-astro-components'

import fa from '../../data/fa.json'
import en from '../../data/en.json'
import { Icon } from 'astro-icon/components'
import { getLocaleFromPath } from 'src/utils/locale'
import { toPersianNumber } from 'src/utils/toPersianNumber'

const { lang } = Astro.params
const data = lang === 'fa' ? fa : en

const { currentLocale } = getLocaleFromPath(Astro.url.pathname)
const base = import.meta.env.BASE_URL
---

<DefaultLayout lang={lang} title={data.title} dark>
  <Hero />
  <section class="my-64">
    <div class="container">
      <h2 class="mb-16 text-6xl">{data.projects}</h2>
      <div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
        <Feature icon="lucide:rocket" title="Messier" href={`${base}/${currentLocale}/messier`}>
          {data.projectDescription}
        </Feature>
      </div>
    </div>
  </section>

  <section class="my-64">
    <div class="space-content container">
      <h2 class="text-6xl">{data.community}</h2>
      <!-- <p class="text-2xl">{data.communityDescription}</p> -->
      <AvatarGroup display="grid" gridItemsSize="300px" gridGap="2rem">
        {
          data.communityMembers.map((member) => (
            <div class="mt-3 flex items-center justify-between gap-2 rounded-lg border border-gray-700 p-4 shadow">
              <div class="flex items-center gap-3">
                <div class="initials-container rounded-full">
                  {member.image ? (
                    <img src={member.image} alt={member.title} class="rounded-full" />
                  ) : (
                    <span class="initials">{member.initials}</span>
                  )}
                </div>
                <div>
                  <div class="text-[20px] font-bold lg:text-xl">{member.title}</div>
                  <div class="text-[16px] text-gray-600 lg:text-[16px]">{member.subtitle}</div>
                </div>
              </div>
              <div class="mt-2 flex gap-3">
                {member.links?.telegram && (
                  <a
                    href={member.links.telegram}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-blue-500 hover:text-blue-700"
                  >
                    <Icon name="lucide:send" class="h-6 w-6" />
                  </a>
                )}
                {member.links?.github && (
                  <a
                    href={member.links.github}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-gray-800 hover:text-black"
                  >
                    <Icon name="lucide:github" class="h-6 w-6" />
                  </a>
                )}
              </div>
            </div>
          ))
        }
      </AvatarGroup>
    </div>
  </section>

  <section class="mt-64 mb-32">
    <div class="container">
      <h2 class="mb-16 text-6xl">{data.impactTitle}</h2>
      <div class="grid grid-cols-1 gap-12 sm:grid-cols-2 md:grid-cols-4">
        {
          data.impactItems.map((item) => (
            <Counter
              count={lang === 'fa' ? toPersianNumber(item.count) : item.count}
              title={item.title}
              sub={item.sub}
            />
          ))
        }
      </div>
    </div>
  </section>
</DefaultLayout>

<style>
  .avatar {
    border: 1px solid var(--border-color-subtle);
    border-radius: var(--radius-md);
    padding: var(--space-s);
  }

  .initials-container {
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid;
    border-color: var(--color-default-border, #ccc);
    border-radius: 50%;
    background-color: var(--color-default-bg, #f8f8f8);
    width: 75px;
    height: 75px;
    color: var(--color-default-text, #fff);
  }

  .initials {
    color: #fff;
    font-weight: bold;
    font-size: calc(var(--size, 80px) / 2.5);
  }
</style>
